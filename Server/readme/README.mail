In command.c, replace your mail switches with the following switches and
add a command in the command table wmail (that's what I called it) that
looks like the entry for mail, except command is wmail, use the wmail switch,
and do_wmail for the handler.

/* MMMail mail switch */
NAMETAB mail_sw[] = {
{(char *)"send",	3,	CA_PUBLIC,	M_SEND},
{(char *)"reply",	3,	CA_PUBLIC,	M_REPLY},
{(char *)"forward",	2,	CA_PUBLIC,	M_FORWARD},
{(char *)"read",	3,	CA_PUBLIC,	M_READ},
{(char *)"lock",	3,	CA_PUBLIC,	M_LOCK},
{(char *)"status",	2,	CA_PUBLIC,	M_STATUS},
{(char *)"delete",	1,	CA_PUBLIC,	M_DELETE},
{(char *)"recall",	3,	CA_PUBLIC,	M_RECALL},
{(char *)"mark",	3,	CA_PUBLIC,	M_MARK},
{(char *)"save",	2,	CA_PUBLIC,	M_SAVE|SW_MULTIPLE},
{(char *)"write",	2,	CA_PUBLIC,	M_WRITE},
{(char *)"reject",	3,	CA_PUBLIC,	M_REJECT},
{(char *)"number",	2,	CA_PUBLIC,	M_NUMBER},
{(char *)"check",	2,	CA_PUBLIC,	M_CHECK},
{(char *)"unmark",	3,	CA_PUBLIC,	M_UNMARK},
{(char *)"quick",	3,	CA_PUBLIC,	M_QUICK},
{(char *)"share",	2,	CA_PUBLIC,	M_SHARE},
{(char *)"password",	3,	CA_PUBLIC,	M_PASS},
{(char *)"page",	3,	CA_PUBLIC,	M_PAGE},
{(char *)"quota",	3,	CA_PUBLIC,	M_QUOTA},
{(char *)"fsend",	2,	CA_WIZARD,	M_FSEND|SW_MULTIPLE},
{(char *)"zap",		1,	CA_PUBLIC,	M_ZAP},
{(char *)"next",	2,	CA_PUBLIC,	M_NEXT},
{(char *)"alias",	2,	CA_PUBLIC,	M_ALIAS},
{(char *)"autofor",	2,	CA_PUBLIC,	M_AUTOFOR},
{ NULL,			0,	0,		0}};

NAMETAB wmail_sw[] = {
{(char *)"clean",	2,	CA_WIZARD,	WM_CLEAN},
{(char *)"load",	3,	CA_WIZARD,	WM_LOAD},
{(char *)"unload",	4,	CA_WIZARD,	WM_UNLOAD},
{(char *)"wipe",	2,	CA_WIZARD,	WM_WIPE},	
{(char *)"on",		2,	CA_WIZARD,	WM_ON},
{(char *)"off",		3,	CA_WIZARD,	WM_OFF},
{(char *)"access",	2,	CA_WIZARD,	WM_ACCESS},
{(char *)"override",	4,	CA_WIZARD,	WM_OVER},
{(char *)"restart",	3,	CA_WIZARD,	WM_RESTART},
{(char *)"size",	2,	CA_WIZARD,	WM_SIZE},
{(char *)"fix",		3,	CA_WIZARD,	WM_FIX},
{(char *)"lfix",	4,	CA_WIZARD,	WM_LOADFIX},
{(char *)"alias",	2,	CA_WIZARD,	WM_ALIAS},
{(char *)"remove",	3,	CA_WIZARD,	WM_REMOVE|SW_MULTIPLE},
{(char *)"lock",	3,	CA_WIZARD,	WM_ALOCK|SW_MULTIPLE},
{(char *)"time",	1,	CA_WIZARD,	WM_MTIME},
{(char *)"dtime",	1,	CA_WIZARD,	WM_DTIME},
{(char *)"smax",	2,	CA_WIZARD,	WM_SMAX},
{ NULL,			0,	0,		0}};

NAMETAB mail2_sw[] = {
{(char *)"create",	2,	CA_PUBLIC,	M2_CREATE},
{(char *)"delete",	1,	CA_PUBLIC,	M2_DELETE},
{(char *)"rename",	1,	CA_PUBLIC,	M2_RENAME},
{(char *)"move",	1,	CA_PUBLIC,	M2_MOVE},
{(char *)"list",	1,	CA_PUBLIC,	M2_LIST},
{(char *)"current",	2,	CA_PUBLIC,	M2_CURRENT},
{(char *)"change",	2,	CA_PUBLIC,	M2_CHANGE},
{(char *)"plist",	1,	CA_PUBLIC,	M2_PLIST},
{(char *)"share",	1,	CA_PUBLIC,	M2_SHARE},
{(char *)"cshare",	2,	CA_PUBLIC,	M2_CSHARE},
{ NULL,			0,	0,		0}};

In command.h, add:
CMD_TWO_ARG(do_wmail);

In create.c, there is a call to do_mail.  You need to
change this to do_wmail and change the M_WIPE int he call to WM_WIPE.

In your Makefile, add inmailfix.c to the line of D_SRC and add inmailfix.o to
the line of D_OBJ.  In your .depend file, add a line for inmailfix.o
that looks just like the line for mailfix.o.  If you don't have the
mailfix yet, well, you need to add the appropriate depend info.
(If you don't have mailfix.c, add the appropriate depends for it)

In attrs.h, add the following attributes:
A_MTIME
A_MSAVEMAX
A_MSAVECUR
A_MCURR
In db.c add:

{"MailCurrent", A_MCURR,	AF_ODARK|AF_NOPROG|AF_NOCMD|AF_WIZARD,
								NULL},
{"MailSMax",	A_MSAVEMAX,	AF_ODARK|AF_NOPROG|AF_WIZARD, NULL},
{"MailSCur",	A_MSAVECUR,	AF_ODARK|AF_NOPROG|AF_WIZARD, NULL},
{"MailTime",	A_MTIME,	AF_ODARK|AF_NOPROG|AF_WIZARD, NULL},

In mudconf.h, by the other mailer items, add
	int	maildelete;
In conf.c in cf_init, add a line
	maildelete = 1;

In your bsd.c, in the routine that handles the shutdown of the socket,
there should already be at the beginning of it, a few lines of code
that handle remarking a player's mail from new to unread and to reset
(clear) the A_MPSET attribute which the mailer uses.  Right after the
atr_clr(thing,A_MPSET) (the thing var may be something diff...I don't
recall off the top of my head.), add a line that has atr_clr(thing,A_MCURR)
Also in this routine, before the call to mail_mark, add:
	if (mudconf.maildelete)
	  mail_md1(d->player,d->player,1,-1);

There are many new commands and features.  For some of them until the help
gets finisshed, you can poke around Rhostshyl (or try and figure them out
for yourself.)  I'll get the help for them when ash finishes the help for
the new stuff.  If it seems like I left out anything, let me know and I'll
see what I can do.

Seawolf

