@@ The following softfunctions can be quoted in to mimic MUX/PENN missing functionality
@@ Note: you'll need to rename existing muxdb columns() to column().  The script should
@@ take care of this automatically.
@create SoftFunctions
@set SoftFunctions=!no_command !halt inh safe indestructable
&FUN_SORTBY Soft=[sort(%1)]
&FUN_COLUMN Soft=[ifelse(or(words(%4%5%6%7%8%9),not(words(%1))),#-1 FUNCTION \(COLUMN\) EXPECTS 2 TO 4 ARGUMENTS,columns(%0,min(sub(79,ifelse(gt(%3,78),1,%3)),%1),div(sub(79,ifelse(gt(%3,78),1,%3)),%1),l,,,ifelse(gt(words(%3),0),space(%3)),,,1,%2))]
&FUN_TABLE SoftFunctions=[ifelse(gt(words(%5%6%7%8%9),0),#-1 FUNCTION \(TABLE\) EXPECT FROM 1 TO 5 ARGUMENTS,columns(%0,switch([gt(words(%1),0)][gt(words(%2),0)],11,min(%1,%2),01,max(10,%2),*,10),switch([gt(words(%1),0)][gt(words(%2),0)],11,max(1,div(%2,%1)),10,max(1,div(78,%1)),01,max(1,div(%2,10)),*,7),L,0,1,,ifelse(strlen(%4),%4,%b),,1,%3))]
&FUNPR_LSEARCH Soft=[setq(0,ifelse(match(%0,all),,%0))][ifelse(words(%4),search(%q0 %1=%2,%3,%4),search(%q0 %1=%2))]
&FUN_LPOS soft=[setdiff(totpos(%1,%0),#-1)]
&FUN_MAIL SoftFunctions=[ifelse(or(gt(%0,0),gt(strlen(%1),0)),[#-1 FEATURE NOT AVAILABLE],mailquick(ifelse(or(eq(strlen(%0),0),match(%0,me)),me,*%0),,ifelse(eq(strlen(%0),0),2,1)))]
&FUN_POLL soft=[doing()]
&FUN_BAND soft=[mask(%0,%1,&)]
&FUN_BOR  soft=[mask(%0,%1,|)]
&FUN_BNAND soft=[mask(mask(%0,power(2,31),^),&)]
&FUN_OBJMEM soft=[size(%0,3)]
&FUN_STRINSERT soft=[creplace(%0,add(%1,1),%2,i)]
&FUN_TIMESTRING soft=[switch(1,gt(strlen(%2%3%4%5%6%7%8%9),0),[#-1 FUNCTION \(TIMESTRING\) EXPECTS 1 OR 2 ARGUMENTS],and(isnum(%1),eq(2,%1)),timefmt($02cd $02Xh $02Fm $02Gs,%0),isnum(%1),timefmt($cd $2Xh $2Fm $2Gs,%0),eq(words(%1),0),timefmt($!cd $!2Xh $!2Fm $2Gs,%0),or(not(isnum(%0)),not(isnum(%1))),[#-1 ARGUMENTS MUST BE INTEGERS])]
&FUN_ITEMIZE soft=[elist(%0,%2,%1,%4,%3)]
&FUN_LPARENT soft=[localize([setr(0,num(%0))] [setdiff(parents(r(0)),#-1 #-2)])]
&FUN_STRTRUNC soft=[mid(%0,0,%1)]
&FUN_EXPTIME soft=[timefmt($!Zy $!EM $!Cd $!Xh $!Fm $Gs,%0)]
&FUN_WRITETIME soft=[timefmt($!Z years $!e months $!C days $!X hours $!F minutes $!G seconds,%0)]
&FUN_DIGITTIME soft=[timefmt($!cd $02X:$02F,v(0))]
&FUN_PICKRAND soft=[randextract(%0,1,%1)]
&FUN_GET_RAW soft=[edit(get(%0),%c,\%c)]
&FUN_V_RAW soft=[edit(v(%0),%c,\%c)]
&FUNP_CNAME soft=[setq(0,switch(match(me here,%0),1,%#,2,loc(%#),%0))][switch([strmatch(name(%q0),stripansi(get(%q0/ansiname)))][hastoggle(%q0,extansi)][hasattr(%q0,ansiname)],111,[get(%q0/ansiname)][ansi(n,)],001,[ansi(get(%q0/ansiname),name(%q0))],name(%q0))]
&FUN_STRTRUNC soft=[trim(ljc(%0,%1))]
&FUN_BORDER soft=[wrap(%0,%1,l,%2,%3)]
&FUN_NONZERO soft=[ifelse(t(%0),%1,%2)]
&FUN_FN soft=[bypass(1)][strfunc(%0,%1 %2 %3 %4 %5 %6 %7 %8 %9)][bypass(0)]
&FUN_LETQ soft=[ifelse(mod(%+,2),[step(#lambda/[lit([setq(s(%0),s(%1))])],[iter(lnum(0,sub(%+,2)),[v(##)],,~)],2,~)][eval([v(sub(%+,1))])],#-1 FUNCTION %(letq%) EXPECTS AN ODD NUMBER OF ARGUMENTS)]
&FUNFLAG_LETQ soft=no_eval
&FUNPR_NAMEGRAB soft=[setq(0,)][iter(%0,ifelse(strmatch(name(##),%1),##[setq(0,)][ibreak(0)],ifelse(and(!$r(0),strmatch(name(##),*%1*)),setq(0,##))),,)]%q0
&FUN_NAMEGRABALL soft=[trim(squish(iter(%0,ifelse(strmatch(name(##),*%1*),##))))]
&FUNPR_NAMELIST soft=[iter(%0,ifelse(!match(setr(0,pmatch(##)),#-1*),%q0,#-1[objeval(%#,u(%1,##,#-1))]))]
@fo softfunc=&DB me=num(softfunc)
@startup softfunc=@dolist lattr([v(db)]/fun_*)=@function [after(##,_)]=[v(db)]/##;@dolist lattr([v(db)]/funp_*)=@function/priv/pres [after(##,_)]=[v(db)]/##;@dolist lattr([v(DB)]/funpr_*)=@function/pres [after(##,_)]=[v(DB)]/##;@dolist lattr([v(db)]/funpv_*)=@function/priv [after(##,_)]=[v(DB)]/##;@wait 10={@dolist lattr([v(db)]/funflag_*)=@admin function_access=[after(##,_)] [get([v(db)]/##)]}
@@ think Issue this command:  @dolist search\(flags=P\)=@swi \[words\(get\(##/race\)\)\]=0,@cpattr/clear ##/RACE=##/race
