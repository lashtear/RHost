Here are some things to know about RhostMUSH and what you may or may not
want to do.  Things here are not covered in other documents:

Admin toggles to configure the WHO, various things you're used to, etc is in the
'netrhost.conf' file.  descriptions Notes in the autoconf.h file is in the 
README.AUTOCONF file.


1)  Note on bits, their levels, and things they do
	IMMORTAL - They can do anything.  Treat this as #1 and only give to
	people you trust.  Period.   You don't have to use this bit
        if you do not want to and just assume #1.

	ROYALTY - Unlike PENN/MUX, this is *not* a sub-wizard, this is a 
	FULL wizard.  Plus, they can do a bit more.

	COUNCILOR - Like royalty on PENN/MUX but they can modify.

	ARCHITECT - Can't do as much as councilor, but lot more than BUILDER.

	GUILDMASTER - Very limited.  Sees dbrief#'s, can ex things their
	level and lower and @quota players.
  
    There is further information about the bits in README.BITS

2)  You need to @pcreate your guest characters and set them GUEST.
	It doesn't create them on the fly but we considered this better.
	You have 31 total you can have.  It defaults to 10 in the
	netrhost.conf file.  You can rename the guests anything you want,
        but before you do so, you must add the dbref#'s to the param
        guest_namelist

3)  @powers are INHERITED.  Therefore, they are meaningless on objects.
	A power is taken before a bit level ONLY if higher than that bit.
	Yes, powers are multi-level.  Again, they do not work on non-players.

4)  @depowers are automatically checked first before anything else.
	This is also meaningless on objects.

5)  zones are unique.  You can have things in multiple zones.

6)  The db auto-repares itself when it can.  It does this by purging anything
	it can't identify.  Dataloss is better than unrecoverable data.
        Yes, any such 'repairing' is logged so you know if something is up.

7)  unlike MUX, the .txt files do not parse functionality.
    You _can_ however force parsing of .txt files with dynhelp() and @dynhelp.
    If you want to insert ANSI into the news.txt file, for example, you have
    to put the LITERAL ansi codes into it.  ANSI is not really considered too
    nice on the connect screen or other .txt files because some terminals can
    not process ansi codes correctly and hang.  You can, however, use @dynhelp
    (or dynhelp()) to parse the .txt files.

8)  When you compile the binaries, you need to move them to the main directory
    the mush is housed in.  Keep in mind to NEVER overwrite the current 'rhost'
    binary if the mush is running.  First, move the running binary to something
    like 'rhost~' then you can move/copy the new binary into 'rhost'.  You
    can use the 'install_binaries.sh' script in the ~/src directory to do this
    for you.  Failure to follow this procedure will cause Rhost to crash on
    a @reboot.

9)  load the file softfunctions into the mush once it's set up.  This are 
    @functions that will alias the functions that PENN, MUX, and TinyMUSH have
    that is either named differently or we don't have for one reason or another.
