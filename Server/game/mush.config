#	mush.config - constants for mush shell scripts
#
#	Change these variables as appropriate
#
# NOTE: Where it's reading netrhost.conf it relies on the options
#       being tab spaced
#
GAMEDIR=.
OWNER=myname@mysite.org
#
#	You should never need to change these.
#
# Gamename is _NOT_ the name of your mush.  It is
# the name that the DB uses.  Seperate animal.  To change
# the name of your mush, use the 'mud_name' param.
#
GAMENAME=netrhost
#
# We need to know what directories we're keeping stuff in 
# .. This make look a little complex and wacky but hey :)
# First we get the required fields from the config file
# Then we use echo to compress whitespace and cut out just
# the values.
TXT_DIR=`grep "^txt_dir" ${GAMENAME}.conf |awk '{printf("%s",substr($0,index($0,$2)))}'`
DATA_DIR=`grep "^data_dir" ${GAMENAME}.conf |awk '{printf("%s",substr($0,index($0,$2)))}'`

#
# We also want to know what ports we're playing with.
#
PORT=`grep "^port" ${GAMENAME}.conf |awk '{printf("%s",substr($0,index($0,$2)))}'`
DEBUG_ID=`grep "^debug_id" ${GAMENAME}.conf |awk '{printf("%s",substr($0,index($0,$2)))}'`

#
# Now to work out what all the database files are called
# For the most part we'll grep the netrhost.config file
# for them, this we we can make sure that the two scripts
# are synched.
NEW_DB=${DATA_DIR}/`grep "^output_database" ${GAMENAME}.conf |awk '{printf("%s",substr($0,index($0,$2)))}'`
INPUT_DB=${DATA_DIR}/`grep "^input_database" ${GAMENAME}.conf |awk '{printf("%s",substr($0,index($0,$2)))}'`
GDBM_DB=${DATA_DIR}/`grep "^gdbm_database" ${GAMENAME}.conf |awk '{printf("%s",substr($0,index($0,$2)))}'`
CRASH_DB=${DATA_DIR}/`grep "^crash_database" ${GAMENAME}.conf |awk '{printf("%s",substr($0,index($0,$2)))}'`
SAVE_DB=${NEW_DB}.old
BACKUP_DB=${NEW_DB}.bk
#
#
LOGNAME=$GAMENAME.log
SAVENAME=$GAMENAME.tar.Z


